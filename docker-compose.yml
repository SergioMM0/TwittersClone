services:
  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: your_username
      RABBITMQ_DEFAULT_PASS: your_password
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 5s
      retries: 30

  api:
    build:
      context: ./API
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      rabbitmq:
        condition: service_healthy
  
  authservice:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    ports:
      - "8087:5254"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      rabbitmq:
        condition: service_healthy

  followersservice:
    build:
      context: ./FollowersService
      dockerfile: Dockerfile
    ports:
      - "8081:5256"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      rabbitmq:
        condition: service_healthy

  likeservice:
    build:
      context: ./LikeService
      dockerfile: Dockerfile
    ports:
      - "8082:5257"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      rabbitmq:
        condition: service_healthy

  notificationservice:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    ports:
      - "8083:5258"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      rabbitmq:
        condition: service_healthy
        
  postservice:
    build:
      context: ./PostService
      dockerfile: Dockerfile
    ports:
      - "8084:5259"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      rabbitmq:
        condition: service_healthy

  searchservice:
    build:
      context: ./SearchService
      dockerfile: Dockerfile
    ports:
      - "8085:5260"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      rabbitmq:
        condition: service_healthy
  
  userservice:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    ports:
      - "8086:5261"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      rabbitmq:
        condition: service_healthy